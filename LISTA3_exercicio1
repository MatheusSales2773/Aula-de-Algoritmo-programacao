#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int value(char roman) {
    if (roman == 'I')
        return 1;
    if (roman == 'V')
        return 5;
    if (roman == 'X')
        return 10;
    if (roman == 'L')
        return 50;
    if (roman == 'C')
        return 100;
    if (roman == 'D')
        return 500;
    if (roman == 'M')
        return 1000;
    return -1;
}

int roman_to_decimal(char roman_num[]) {
    int decimal = 0;
    int i;

    for (i = 0; i < strlen(roman_num); i++) {
        int s1 = value(roman_num[i]);

        if (i + 1 < strlen(roman_num)) {
            int s2 = value(roman_num[i + 1]);

            if (s1 >= s2) {
                decimal = decimal + s1;
            } else {
                decimal = decimal + s2 - s1;
                i++;
            }
        } else {
            decimal = decimal + s1;
        }
    }

    return decimal;
}

void decimal_to_binary(int decimal, char binary[]) {
    int i = 0;

    while (decimal > 0) {
        binary[i] = decimal % 2 + '0';
        decimal /= 2;
        i++;
    }

    if (i == 0) {
        binary[i++] = '0';  // Handle case when decimal is 0
    }

    binary[i] = '\0';

    int j;
    for (j = 0; j < i / 2; j++) {
        char temp = binary[j];
        binary[j] = binary[i - j - 1];
        binary[i - j - 1] = temp;
    }
}

void decimal_to_hexadecimal(int decimal, char hexadecimal[]) {
    int i = 0;
    while (decimal > 0) {
        int remainder = decimal % 16;

        if (remainder < 10) {
            hexadecimal[i] = remainder + '0';
        } else {
            hexadecimal[i] = remainder - 10 + 'a';
        }

        decimal /= 16;
        i++;
    }

    if (i == 0) {
        hexadecimal[i++] = '0';  // Handle case when decimal is 0
    }

    hexadecimal[i] = '\0';

    int j;
    for (j = 0; j < i / 2; j++) {
        char temp = hexadecimal[j];
        hexadecimal[j] = hexadecimal[i - j - 1];
        hexadecimal[i - j - 1] = temp;
    }
}

int main() {
    char roman_num[13];
    scanf("%s", roman_num);

    int decimal = roman_to_decimal(roman_num);
    char binary[33];
    decimal_to_binary(decimal, binary);
    char hexadecimal[5];
    decimal_to_hexadecimal(decimal, hexadecimal);

    printf("%s na base 2: %s\n", roman_num, binary);
    printf("%s na base 10: %d\n", roman_num, decimal);
    printf("%s na base 16: %s\n", roman_num, hexadecimal);

    return 0;
}
