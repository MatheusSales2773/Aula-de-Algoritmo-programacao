#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int roman_to_decimal(char roman_num[]) {
    int decimal = 0;
    int i;

    for (i = 0; roman_num[i] != '\0'; i++) {
        if (roman_num[i] == 'M') {
            decimal += 1000;
        } else if (roman_num[i] == 'D') {
            decimal += 500;
        } else if (roman_num[i] == 'C') {
            if (roman_num[i + 1] == 'M') {
                decimal += 900;
                i++;
            } else if (roman_num[i + 1] == 'D') {
                decimal += 400;
                i++;
            } else {
                decimal += 100;
            }
        } else if (roman_num[i] == 'L') {
            decimal += 50;
        } else if (roman_num[i] == 'X') {
            if (roman_num[i + 1] == 'C') {
                decimal += 90;
                i++;
            } else if (roman_num[i + 1] == 'L') {
                decimal += 40;
                i++;
            } else {
                decimal += 10;
            }
        } else if (roman_num[i] == 'V') {
            decimal += 5;
        } else if (roman_num[i] == 'I') {
            if (roman_num[i + 1] == 'X') {
                decimal += 9;
                i++;
            } else if (roman_num[i + 1] == 'V') {
                decimal += 4;
                i++;
            } else {
                decimal += 1;
            }
        }
    }

    return decimal;
}

void decimal_to_binary(int decimal, char binary[]) {
    int i = 0;

    while (decimal > 0) {
        binary[i] = decimal % 2 + '0';
        decimal /= 2;
        i++;
    }

    binary[i] = '\0';

    int j;
    for (j = 0; j < i / 2; j++) {
        char temp = binary[j];
        binary[j] = binary[i - j - 1];
        binary[i - j - 1] = temp;
    }
}

void decimal_to_hexadecimal(int decimal, char hexadecimal[]) {
    int i = 0;

    while (decimal > 0) {
        int remainder = decimal % 16;

        if (remainder < 10) {
            hexadecimal[i] = remainder + '0';
        } else {
            hexadecimal[i] = remainder + 55;
        }

        decimal /= 16;
        i++;
    }

    hexadecimal[i] = '\0';

    int j;
    for (j = 0; j < i / 2; j++) {
        char temp = hexadecimal[j];
        hexadecimal[j] = hexadecimal[i - j - 1];
        hexadecimal[i - j - 1] = temp;
    }
}

int main() {
    char roman_num[13];
    scanf("%s", roman_num);

    int decimal = roman_to_decimal(roman_num);
    char binary[33];
    decimal_to_binary(decimal, binary);
    char hexadecimal[5];
    decimal_to_hexadecimal(decimal, hexadecimal);

    printf("%s\n I na base 2: ", binary);
    printf("%d\n I na base 10: ", decimal);
    printf("%s\n I na base 16: ", hexadecimal);

    return 0;
}
